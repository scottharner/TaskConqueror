<Window 
  x:Class="TaskConqueror.ProjectView"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
  xmlns:acb="clr-namespace:AttachedCommandBehavior"
  FontSize="13" 
  FontFamily="Verdana"
  Title="{Binding Path=DisplayName}"
  >
    <DockPanel Margin="4">
        <StackPanel 
    Orientation="Horizontal"
    DockPanel.Dock="Top">
            <!-- Buttons -->
            <GroupBox 
          Header="File" HorizontalAlignment="Left" Margin="0,0,2,10">
                <StackPanel Orientation="Horizontal">
                    <!-- SAVE BUTTON -->
                    <Button 
      Command="{Binding Path=SaveCommand}"
      Content="_Save"
      Margin="4,2" 
      MinWidth="60" 
      />
                    <Button 
      Command="{Binding Path=CancelCommand}"
      Content="_Close"
      Margin="4,2" 
      MinWidth="60" 
      />
                </StackPanel>
            </GroupBox>

            <!-- Buttons -->
            <GroupBox 
          Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Grid.RowSpan="2" Header="Tasks" HorizontalAlignment="Left" Margin="2,0,0,10">
                <StackPanel Orientation="Horizontal">
                    <!-- NEW BUTTON -->
                    <Button 
      Command="{Binding Path=NewTaskCommand}"
      Content="New"
      Margin="4,2" 
      MinWidth="60" 
      />
                    <Button 
      Command="{Binding Path=EditTaskCommand}"
      Content="Edit"
      Margin="4,2" 
      MinWidth="60" 
      />
                    <Button 
      Command="{Binding Path=DeleteTaskCommand}"
      Content="Delete"
      Margin="4,2" 
      MinWidth="60" 
      />
                </StackPanel>
            </GroupBox>
        </StackPanel>

        <Grid DockPanel.Dock="Bottom" Margin="4">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="6" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="30" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="30" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="30" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="30" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="30" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="30" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Grid.Resources>
                <DataTemplate DataType="{x:Type ValidationError}">
                    <TextBlock 
          FontStyle="Italic"
          Foreground="Red"
          HorizontalAlignment="Right"
          Margin="0,1"
          Text="{Binding Path=ErrorContent}" 
          />
                </DataTemplate>
                <CollectionViewSource
      x:Key="TaskGroups" 
      Source="{Binding Path=ChildTasks}"
      >
                    <CollectionViewSource.SortDescriptions>
                        <!-- 
        Sort descending by IsCompany so that the 'True' values appear first,
        which means that companies will always be listed before people.
        -->
                        <scm:SortDescription PropertyName="PriorityId" Direction="Descending" />
                        <scm:SortDescription PropertyName="Title" Direction="Ascending" />
                    </CollectionViewSource.SortDescriptions>
                </CollectionViewSource>

                <Style x:Key="TaskItemStyle" TargetType="{x:Type ListViewItem}">
                    <!-- 
      Stretch the content of each cell so that we can 
      right-align text in the Total Sales column. 
      -->
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <!-- 
      Bind the IsSelected property of a ListViewItem to the 
      IsSelected property of a CustomerViewModel object.
      -->
                    <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}" />
                    <Setter Property="acb:CommandBehavior.Event"
                        Value="MouseDoubleClick" />
                    <Setter Property="acb:CommandBehavior.Command"
                        Value="{Binding ElementName=ContainingDockPanel, Path=DataContext.EditCommand}" />
                    <Setter Property="acb:CommandBehavior.CommandParameter"
                        Value="{Binding}" />

                    <Style.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ItemsControl.AlternationIndex" Value="1" />
                                <Condition Property="IsSelected" Value="False" />
                                <Condition Property="IsMouseOver" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="#EEEEEEEE" />
                        </MultiTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Resources>


            <!-- TITLE -->
            <Label 
      Grid.Row="0" Grid.Column="0" 
      Content="_Title:" 
      HorizontalAlignment="Right"
      Target="{Binding ElementName=titleTxt}"
      />
            <TextBox 
      x:Name="titleTxt"
      Grid.Row="0" Grid.Column="2" 
      Text="{Binding Path=Title, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" 
      Validation.ErrorTemplate="{x:Null}"
      />
            <ContentPresenter 
      Grid.Row="1" Grid.Column="2"
      Content="{Binding ElementName=titleTxt, Path=(Validation.Errors).CurrentItem}"
      />

            <!-- PROJECT -->
            <Label 
      Grid.Row="2" Grid.Column="0" 
      Content="_Project:" 
      HorizontalAlignment="Right"
      Target="{Binding ElementName=projectLbl}"
      />
            <Label 
      x:Name="projectLbl"
      Grid.Row="2" Grid.Column="2" 
      Content="{Binding Path=Project}" 
      Validation.ErrorTemplate="{x:Null}"
      />

            <!-- Status -->
            <Label 
      Grid.Row="4" Grid.Column="0" 
      Content="_Status:" 
      HorizontalAlignment="Right"
      Target="{Binding ElementName=statusCmb}" 
      />
            <ComboBox 
      x:Name="statusCmb"
      Grid.Row="4" Grid.Column="2" 
      ItemsSource="{Binding Path=StatusOptions}"
      SelectedItem="{Binding Path=SelectedStatus, ValidatesOnDataErrors=True}"
      Validation.ErrorTemplate="{x:Null}"
      DisplayMemberPath="Description"
      SelectedValuePath="StatusID"
      />
            <ContentPresenter 
      Grid.Row="5" Grid.Column="2"
      Content="{Binding ElementName=statusCmb, Path=(Validation.Errors).CurrentItem}"
      />

            <!-- Estimated Cost -->
            <Label 
      Grid.Row="6" Grid.Column="0" 
      Content="_Estimated Cost:" 
      HorizontalAlignment="Right"
      Target="{Binding ElementName=costTxt}" 
      />
            <TextBox 
      x:Name="costTxt"
      Grid.Row="6" Grid.Column="2" 
      Text="{Binding Path=EstimatedCost, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" 
      Validation.ErrorTemplate="{x:Null}"
      />
            <ContentPresenter 
      Grid.Row="7" Grid.Column="2"
      Content="{Binding ElementName=costTxt, Path=(Validation.Errors).CurrentItem}"
      />

            <!-- Date Created -->
            <Label 
      Grid.Row="8" Grid.Column="0" 
      Content="_Date Created:" 
      HorizontalAlignment="Right"
      Target="{Binding ElementName=createdDateLbl}"
      />
            <Label 
      x:Name="createdDateLbl"
      Grid.Row="8" Grid.Column="2" 
      Content="{Binding Path=CreatedDate}" 
      Validation.ErrorTemplate="{x:Null}"
      />

            <!-- Date Completed -->
            <Label 
      Grid.Row="10" Grid.Column="0" 
      Content="Date _Completed:" 
      HorizontalAlignment="Right"
      Target="{Binding ElementName=completedDateLbl}"
      />
            <Label 
      x:Name="completedDateLbl"
      Grid.Row="10" Grid.Column="2" 
      Content="{Binding Path=CompletedDate}" 
      Validation.ErrorTemplate="{x:Null}"
      />
            <!-- Tasks -->
            <Label 
      Grid.Row="12" Grid.Column="0" 
      Content="Tasks:" 
      HorizontalAlignment="Right"
      Target="{Binding ElementName=tasksLbl}"
      />
            <ScrollViewer Grid.Row="13" Grid.ColumnSpan="3">
                <ListView 
      AlternationCount="2" 
                Grid.Row="13"
                Grid.ColumnSpan="3"
      DataContext="{StaticResource TaskGroups}" 
      ItemContainerStyle="{StaticResource TaskItemStyle}"
      ItemsSource="{Binding}"
        SelectionMode="Single"
      >
                    <ListView.View>
                        <GridView>
                            <GridViewColumn 
            Header="Title" 
            DisplayMemberBinding="{Binding Path=Title}" 
            />
                            <GridViewColumn 
            Header="Status" 
            DisplayMemberBinding="{Binding Path=StatusDescription}" 
            />
                            <GridViewColumn
              Header="Priority"
              DisplayMemberBinding="{Binding Path=PriorityDescription}"/>
                            <GridViewColumn
              Header="Date Created"
              DisplayMemberBinding="{Binding Path=CreatedDate}"/>
                            <GridViewColumn
              Header="Date Completed"
              DisplayMemberBinding="{Binding Path=CompletedDate}"/>
                        </GridView>
                    </ListView.View>
                </ListView>
            </ScrollViewer>
        </Grid>
    </DockPanel>
</Window>