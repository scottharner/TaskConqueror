<Window 
  x:Class="TaskConqueror.AddTasksView"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:tc="clr-namespace:TaskConqueror"
  xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
  FontSize="13" 
  FontFamily="Verdana"
  Title="{Binding Path=DisplayName}"
  >
    <DockPanel Margin="4">
        <Grid DockPanel.Dock="Bottom" Margin="4">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <!-- INACTIVE TASKS -->
            <HeaderedContentControl Grid.Row="0" Header="Inactive Tasks">
                <TreeView ItemsSource="{Binding Path=InactiveTasksByGoal}">
                    <TreeView.Resources>
                        <DataTemplate DataType="{x:Type tc:TaskTreeNodeViewModel}">
                            <StackPanel Orientation="Horizontal" Margin="2">
                                <Image Source="pack://application:,,,/TaskConqueror;Component/Assets/Images/task.png"
                       Width="16"
                       Height="16"
                       SnapsToDevicePixels="True"/>
                                <TextBlock Text="{Binding Path=Title}" Margin="5,0"/>
                            </StackPanel>
                        </DataTemplate>
                        <HierarchicalDataTemplate DataType="{x:Type tc:GoalTreeNodeViewModel}"
                                          ItemsSource="{Binding ChildNodes}"
                                          >
                            <StackPanel Orientation="Horizontal" Margin="2">
                                <Image Source="pack://application:,,,/TaskConqueror;Component/Assets/Images/goal.png"
                       Width="16"
                       Height="16"
                       SnapsToDevicePixels="True"/>
                                <TextBlock Text="{Binding Path=Title}" Margin="5,0"/>
                            </StackPanel>
                        </HierarchicalDataTemplate>
                        <HierarchicalDataTemplate DataType="{x:Type tc:ProjectTreeNodeViewModel}"
                                          ItemsSource="{Binding ChildNodes}"
                                          >
                            <StackPanel Orientation="Horizontal" Margin="2">
                                <Image Source="pack://application:,,,/TaskConqueror;Component/Assets/Images/project.png"
                       Width="16"
                       Height="16"
                       SnapsToDevicePixels="True"/>
                                <TextBlock Text="{Binding Path=Title}" Margin="5,0"/>
                            </StackPanel>
                        </HierarchicalDataTemplate>
                        <HierarchicalDataTemplate DataType="{x:Type tc:UnassignedTreeNodeViewModel}"
                                          ItemsSource="{Binding ChildNodes}"
                                          >
                            <StackPanel Orientation="Horizontal" Margin="2">
                                <Image Source="pack://application:,,,/TaskConqueror;Component/Assets/Images/unassigned.png"
                       Width="16"
                       Height="16"
                       SnapsToDevicePixels="True"/>
                                <TextBlock Text="{Binding Path=Title}" Margin="5,0"/>
                            </StackPanel>
                        </HierarchicalDataTemplate>
                        <Style
                            TargetType="TreeViewItem">
                            <Setter
                                Property="IsSelected"
                                Value="{Binding IsSelected}" />
                            <Setter
                                Property="tc:TreeviewItemChangedCommandBehavior.Command"
                                Value="{Binding DataContext.SelectNodeCommand, RelativeSource={RelativeSource AncestorType={x:Type TreeView}}}" />
                            <Setter
                                Property="tc:TreeviewItemChangedCommandBehavior.InvokeOnRightClick"
                                Value="True" />
                        </Style>
                    </TreeView.Resources>
                </TreeView>
            </HeaderedContentControl>
            
            <!-- Add and remove buttons -->
            <StackPanel Grid.Row="1" Orientation="Horizontal">
                <!-- SAVE BUTTON -->
                <Button 
      Command="{Binding Path=AddCommand}"
      Content="_Add"
      Margin="4,2" 
      MinWidth="60" 
      />
                <Button 
      Command="{Binding Path=RemoveCommand}"
      Content="_Remove"
      Margin="4,2" 
      MinWidth="60" 
      />
            </StackPanel>

            <!-- Selected tasks -->
            <HeaderedContentControl Header="Selected Tasks" Grid.Row="2">
                <HeaderedContentControl.Resources>
                    <CollectionViewSource
      x:Key="TaskGroups" 
      Source="{Binding Path=SelectedTasks}"
      >
                        <CollectionViewSource.SortDescriptions>
                            <scm:SortDescription PropertyName="PriorityId" Direction="Descending" />
                            <scm:SortDescription PropertyName="Title" Direction="Ascending" />
                        </CollectionViewSource.SortDescriptions>
                    </CollectionViewSource>

                    <Style x:Key="TaskItemStyle" TargetType="{x:Type ListViewItem}">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        <!-- 
                            Bind the IsSelected property of a ListViewItem to the 
                            IsSelected property of a CustomerViewModel object.
                        -->
                        <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}" />
                        <Style.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="ItemsControl.AlternationIndex" Value="1" />
                                    <Condition Property="IsSelected" Value="False" />
                                    <Condition Property="IsMouseOver" Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" Value="#EEEEEEEE" />
                            </MultiTrigger>
                        </Style.Triggers>
                    </Style>
                </HeaderedContentControl.Resources>
                <ListView 
      AlternationCount="2" 
      DataContext="{StaticResource TaskGroups}" 
      ItemContainerStyle="{StaticResource TaskItemStyle}"
      ItemsSource="{Binding}"
        SelectionMode="Single"
      >

                    <ListView.View>
                        <GridView>
                            <GridViewColumn 
            Header="Title" 
            DisplayMemberBinding="{Binding Path=Title}" 
            />
                            <GridViewColumn 
            Header="Status" 
            DisplayMemberBinding="{Binding Path=StatusDescription}" 
            />
                            <GridViewColumn
              Header="Priority"
              DisplayMemberBinding="{Binding Path=PriorityDescription}"/>
                            <GridViewColumn
              Header="Project"
              DisplayMemberBinding="{Binding Path=ProjectTitle}"/>
                            <GridViewColumn
              Header="Date Created"
              DisplayMemberBinding="{Binding Path=CreatedDate}"/>
                            <GridViewColumn
              Header="Date Completed"
              DisplayMemberBinding="{Binding Path=CompletedDate}"/>
                        </GridView>
                    </ListView.View>
                </ListView>
            </HeaderedContentControl>
            
            <!-- Ok and cancel buttons -->
            <StackPanel Grid.Row="3" Orientation="Horizontal" HorizontalAlignment="Right">
                <Button 
      Command="{Binding Path=OkCommand}"
      Content="_OK"
      Margin="4,2" 
      MinWidth="60" 
      />
                <Button 
      Command="{Binding Path=CloseCommand}"
      Content="_Cancel"
      Margin="4,2" 
      MinWidth="60" 
      />
            </StackPanel>
        </Grid>
    </DockPanel>
</Window>